name: Testing

on:
  workflow_call:
    inputs:
      test-path:
        required: false
        default: "test/"
        type: string
      module-path:
        required: false
        default: "."
        type: string
      terraform-version:
        required: false
        default: latest
        type: string
jobs:
  generate-test-matrix:
    name: 'Generate Test Matrix'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
 
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set Matrix
        working-directory: ${{ inputs.module-path }}/
        id: set-matrix
        run: |
          test_files=$(find . -name '*_test.go' -exec basename {} \;)
          if [ -n "$(find . -name '*_test.go' -exec basename {} \;)" ]; then
            matrix='{"include":['
            first=true
            for test_file in $test_files; do
              if [ "$first" = false ]; then
                matrix+=','
              fi
              matrix+='{"test_file":"'${test_file}'"}'
              first=false
            done
            matrix+=']}'
            echo "MATRIX=${matrix}" >> "$GITHUB_OUTPUT"
          elif [ -n "$(find . -name '*.tftest.hcl' -exec basename {} \;)" ]; then
            matrix='{"include":['
            first=true
            for test_file in $test_files; do
              if [ "$first" = false ]; then
                matrix+=','
              fi
              matrix+='{"test_file":"'${test_file}'"}'
              first=false
            done
            matrix+=']}'
            echo "MATRIX=${matrix}" >> "$GITHUB_OUTPUT"
          fi

  run-terratest:
    name: 'Run Terratest'
    needs: generate-test-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: contains(needs.generate-test-matrix.outputs.matrix, '_test.go')
    strategy:
      matrix:
        test_file: ${{fromJSON(needs.generate-test-matrix.outputs.MATRIX).include.*.test_file}}
 
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
 
      - name: Go setup
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.1
          cache: 'false'
 
      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: 18
 
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}
 
      - name: Terraform init
        working-directory: ${{ inputs.module-path }}/
        run: terraform init
 
      - name: Set Go Proxy
        run: go env -w GOPROXY=https://proxy.golang.org
 
      - name: Setup Dependencies
        working-directory: ${{ inputs.terratest-path }}/
        run: |
          repo_url=$(git config --get remote.origin.url)
          repo_name=$(basename -s .git $repo_url)
          go mod init $repo_name
          go mod tidy
 
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
 
      - name: Run Go Tests
        working-directory: ${{ inputs.terratest-path }}
        run: |
          go test -v -timeout 30m ./${{ matrix.test_file }}

  run-hcl-testing:
    name: 'Run HCL Testing'
    needs: generate-test-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: contains(needs.generate-test-matrix.outputs.matrix, '.tftest.hcl')
    strategy:
      matrix:
        test_file: ${{fromJSON(needs.generate-test-matrix.outputs.MATRIX).include.*.test_file}}
  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Terraform init
        working-directory: ${{ inputs.module-path }}/
        run: terraform init
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Run HCL Tests
        working-directory: ${{ inputs.test-path }}
        run: |
          terraform test ./${{ matrix.test_file }}




