name: Testing

on:
  workflow_call:
    inputs:
      terratest-path:
        required: false
        default: "test/"
        type: string
      module-path:
        required: false
        default: "."
        type: string
      terraform-version:
        required: false
        default: latest
        type: string

jobs:
  check-for-tests:
    name: 'Check for Tests'
    runs-on: ubuntu-latest
    outputs:
      found-tests: ${{ steps.find-tests.outputs.found-tests }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Find .test.go and .tftest.hcl files
        id: find-tests
        run: |
          if [ -n "$(find . -name '*_test.go' -exec basename {} \;)" ]; then
            echo "GITHUB_OUTPUT=terratest" >> "$GITHUB_OUTPUT"
          elif [ -n "$(find . -name '*.tftest.hcl' -exec basename {} \;)" ]; then
            echo "GITHUB_OUTPUT=hcl-testing" >> "$GITHUB_OUTPUT"
          else
            echo "GITHUB_OUTPUT=none" >> "$GITHUB_OUTPUT"
          fi
      - name: Notify Next Job
        if: needs.check-for-tests.outputs.found-tests == 'none'
        run: |
          echo "Next job will be skipped as there are no test files."

  run-terratest:
    name: 'Run Terratest'
    needs: check-for-tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: needs.check-for-tests.outputs.found-tests == 'terratest'
    steps:
      - name: Generate Test Matrix
        id: set-matrix
        run: |
          test_files=$(find . -name '*_test.go' -exec basename {} \;)
          if [ -z "$test_files" ]; then
            echo "No test files found. Skipping subsequent jobs"
          else
            matrix='{"include":['
            first=true
            for test_file in $test_files; do
              if [ "$first" = false ]; then
                matrix+=','
              fi
              matrix+='{"test_file":"'${test_file}'"}'
              first=false
            done
            matrix+=']}'
            echo "MATRIX=${matrix}" >> "$GITHUB_OUTPUT"
          fi
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Go setup
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.1
      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Terraform init
        working-directory: ${{ inputs.module-path }}/
        run: terraform init
      - name: Set Go Proxy  # Add this step to set the Go proxy
        run: go env -w GOPROXY=https://proxy.golang.org
      - name: Setup Dependencies
        working-directory: ${{ inputs.terratest-path }}/
        run: |
          repo_url=$(git config --get remote.origin.url)
          repo_name=$(basename -s .git $repo_url)
          go mod init $repo_name
          go mod tidy
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Run Go Tests
        working-directory: ${{ inputs.terratest-path }}
        run: |
          go test -v -timeout 30m ./${{ matrix.test_file }}
  run-hcl-testing:
    name: 'Run HCL Testing'
    needs: check-for-tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: needs.check-for-tests.outputs.found-tests == 'hcl-testing'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4